/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.sorveteriajanuaria.apresentacao;

import br.com.sorveteriajanuaria.entidade.Revendedor;
import br.com.sorveteriajanuaria.excecao.CampoObrigatorioException;
import br.com.sorveteriajanuaria.excecao.SorveteriaJanuariaException;
import br.com.sorveteriajanuaria.negocio.RevendedorBO;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Késia Correiia
 */
public final class PesquisaRevendedoresForm extends javax.swing.JFrame {

    private List<Revendedor> listaRevendedores;
    private CadastroRevendedoresForm novoRevendedorForm;
    private CadastroRevendedoresForm editarRevendedorForm;
    private PesquisaRevendedoresForm pesquisaRevendedorForm;
    private Revendedor revendedor;
    private SimpleDateFormat formatoData = new SimpleDateFormat("dd/MM/yyyy");
    /**
     * Creates new form PesquisaRevendedor
     */
    public PesquisaRevendedoresForm() {
       this.prepararTela();
    }
    
    
    public PesquisaRevendedoresForm (PesquisaRevendedoresForm pesquisaRevendedoresForm) throws SQLException{
        this.pesquisaRevendedorForm = pesquisaRevendedoresForm;
        this.carregarTabelaPesquisaRevendedor();
    }
  
    
     private void prepararTela() {
        try {
            this.initComponents();
            this.carregarTabelaRevendedor();
             setLocationRelativeTo( null );
        } catch (Exception e) {
            String mensagem = "Erro inesperado! Informe a mensagem de erro ao administrador do sistema.";
            mensagem += "\nMensagem de erro:\n" + e.getMessage();
            JOptionPane.showMessageDialog(this, mensagem, "Revendedores Cadastrados", JOptionPane.ERROR_MESSAGE);
            this.dispose();
        }
    }
     
    public void carregarTabelaRevendedor() throws SQLException {
       RevendedorBO revendedorBO = new RevendedorBO();
       this.listaRevendedores = revendedorBO.buscarTodos();
       ModeloTabelaRevendedor modelo = new ModeloTabelaRevendedor();
       tblResultadoPesquisaRevendedor.setModel(modelo);

    }

    public void carregarTabelaPesquisaRevendedor() throws SQLException {
        ModeloTabelaRevendedor modelo = new ModeloTabelaRevendedor();
        tblResultadoPesquisaRevendedor.setModel(modelo);
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpPesquisaRevendedor = new javax.swing.JPanel();
        lblPesquisa = new javax.swing.JLabel();
        rdoNome = new javax.swing.JRadioButton();
        rdoRG = new javax.swing.JRadioButton();
        btnPesquisar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        txtNome = new javax.swing.JTextField();
        lblNome = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtRG = new javax.swing.JFormattedTextField();
        jpResultadoPesquisaRevendedor = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblResultadoPesquisaRevendedor = new javax.swing.JTable();
        btnNovo = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnFechar = new javax.swing.JButton();
        btnGerarRelatorio = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pesquisa Revendedor - Sorveteria Januária");

        jpPesquisaRevendedor.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Filtro", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        jpPesquisaRevendedor.setToolTipText("");

        lblPesquisa.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblPesquisa.setText("Pesquisar por:");

        rdoNome.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdoNome.setText("Nome");
        rdoNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoNomeActionPerformed(evt);
            }
        });

        rdoRG.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdoRG.setText("RG");
        rdoRG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoRGActionPerformed(evt);
            }
        });

        btnPesquisar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/sorveteriajanuaria/apresentacao/icones/buscar.png"))); // NOI18N
        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/sorveteriajanuaria/apresentacao/icones/fechar.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        txtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeActionPerformed(evt);
            }
        });

        lblNome.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblNome.setText("Nome:");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("RG:");

        try {
            txtRG.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###.###-#")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout jpPesquisaRevendedorLayout = new javax.swing.GroupLayout(jpPesquisaRevendedor);
        jpPesquisaRevendedor.setLayout(jpPesquisaRevendedorLayout);
        jpPesquisaRevendedorLayout.setHorizontalGroup(
            jpPesquisaRevendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPesquisaRevendedorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpPesquisaRevendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpPesquisaRevendedorLayout.createSequentialGroup()
                        .addGap(0, 419, Short.MAX_VALUE)
                        .addComponent(btnPesquisar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar))
                    .addGroup(jpPesquisaRevendedorLayout.createSequentialGroup()
                        .addComponent(lblPesquisa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rdoNome)
                        .addGap(10, 10, 10)
                        .addComponent(rdoRG)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jpPesquisaRevendedorLayout.createSequentialGroup()
                        .addComponent(lblNome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtRG)))
                .addContainerGap())
        );
        jpPesquisaRevendedorLayout.setVerticalGroup(
            jpPesquisaRevendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPesquisaRevendedorLayout.createSequentialGroup()
                .addGroup(jpPesquisaRevendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPesquisa)
                    .addComponent(rdoNome)
                    .addComponent(rdoRG))
                .addGap(9, 9, 9)
                .addGroup(jpPesquisaRevendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNome)
                    .addComponent(jLabel1)
                    .addComponent(txtRG, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpPesquisaRevendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jpResultadoPesquisaRevendedor.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Resultado da Pesquisa:", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        tblResultadoPesquisaRevendedor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblResultadoPesquisaRevendedor.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tblResultadoPesquisaRevendedor);

        btnNovo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/sorveteriajanuaria/apresentacao/icones/add.png"))); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnEditar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/sorveteriajanuaria/apresentacao/icones/editar.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnExcluir.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/sorveteriajanuaria/apresentacao/icones/deletar.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnFechar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/sorveteriajanuaria/apresentacao/icones/fechar.png"))); // NOI18N
        btnFechar.setText("Fechar");
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        btnGerarRelatorio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/sorveteriajanuaria/apresentacao/icones/relatórios.png"))); // NOI18N
        btnGerarRelatorio.setText("Gerar Relatório");
        btnGerarRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarRelatorioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpResultadoPesquisaRevendedorLayout = new javax.swing.GroupLayout(jpResultadoPesquisaRevendedor);
        jpResultadoPesquisaRevendedor.setLayout(jpResultadoPesquisaRevendedorLayout);
        jpResultadoPesquisaRevendedorLayout.setHorizontalGroup(
            jpResultadoPesquisaRevendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpResultadoPesquisaRevendedorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpResultadoPesquisaRevendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 638, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpResultadoPesquisaRevendedorLayout.createSequentialGroup()
                        .addComponent(btnGerarRelatorio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNovo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFechar)))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        jpResultadoPesquisaRevendedorLayout.setVerticalGroup(
            jpResultadoPesquisaRevendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpResultadoPesquisaRevendedorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpResultadoPesquisaRevendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnEditar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGerarRelatorio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jpResultadoPesquisaRevendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpPesquisaRevendedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpResultadoPesquisaRevendedor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpPesquisaRevendedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpResultadoPesquisaRevendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnFecharActionPerformed

    private void txtNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        // TODO add your handling code here:
        this.pesquisarRevendedor();
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
         try {
            // TODO add your handling code here:
            this.limparPesquisa();
        } catch (SQLException ex) {
            Logger.getLogger(PesquisaFornecedoresForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        // TODO add your handling code here:
        this.exibirTelaCadastroRevendedor();
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        this.editarRevendedor();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // TODO add your handling code here:
        this.excluirRevendedor();
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void rdoNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoNomeActionPerformed
        // TODO add your handling code here:
        this.desabilitarCampos();
    }//GEN-LAST:event_rdoNomeActionPerformed

    private void rdoRGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoRGActionPerformed
        // TODO add your handling code here:
        this.desabilitarCampos();
    }//GEN-LAST:event_rdoRGActionPerformed

    
    private void btnGerarRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarRelatorioActionPerformed
        // TODO add your handling code here:
       try {
            String relatorio = System.getProperty("user.dir") + "/relatórios/RelatorioRevendedores.jasper";

            RevendedorBO revendedorBO = new RevendedorBO();

            JRBeanCollectionDataSource fontedados = new JRBeanCollectionDataSource(revendedorBO.buscarTodos());

            //Gerar o relatorio
            JasperPrint relatorioGerado = JasperFillManager.fillReport(relatorio, null, fontedados);

            //Exibir Relatorio
            JasperViewer jasperViewer = new JasperViewer(relatorioGerado, false);
            jasperViewer.setVisible(true);

        } catch (JRException ex) {
            ex.printStackTrace();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnGerarRelatorioActionPerformed

    private void desabilitarCampos(){
        if (rdoNome.isSelected()) {
            txtNome.setEnabled(true);
        } else {
            txtNome.setEnabled(false);
        }
    }
      
    private void pesquisarRevendedor() {
        try {
            this.validarCamposPesquisa();
            String filtro = this.recuperarFiltro();
            String palavraPesquisada = this.recuperarPalavraPesquisada();

            RevendedorBO revendedorBO = new  RevendedorBO();
            this.listaRevendedores = revendedorBO.pesquisar(filtro, palavraPesquisada);

            this.carregarTabelaPesquisaRevendedor();

        } catch (SorveteriaJanuariaException e) {
            String mensagem = "Pesquisa não realizada:\n" + e.getMessage();
            JOptionPane.showMessageDialog(this, mensagem, "Pesquisa de fornecedor", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException e) {
            String mensagem = "Sua pesquisa não retornou nenhum resultado.";
            mensagem += "\nMensagem de erro:\n" + e.getMessage();
            JOptionPane.showMessageDialog(this, mensagem, "Pesquisa de Revendedor", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            String mensagem = "Erro inesperado! Informe a mensagem de erro ao administrador do sistema.";
            mensagem += "\nMensagem de erro:\n" + e.getMessage();
            JOptionPane.showMessageDialog(this, mensagem, "Pesquisa de revendedor", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void limparPesquisa() throws SQLException{
        this.limparCamposPesquisa();
        this.carregarTabelaRevendedor();        
    }
    
    private void limparCamposPesquisa(){
        txtNome.setText("");
        txtRG.setText("");
    }

    private void validarCamposPesquisa() {
        if ((!rdoNome.isSelected() && !rdoRG.isSelected())
            ||(txtNome.getText().trim().isEmpty() && txtRG.getText().trim().isEmpty())){
            throw new CampoObrigatorioException();
        }
    }

    private String recuperarFiltro() {

        String filtro;
        if (rdoNome.isSelected()) {
            filtro = "NOME";
        } else {
            filtro = "RG";
        }
        return filtro;
    }

    private String recuperarPalavraPesquisada() {
        String palavraPesquisada;
        
        if (rdoNome.isSelected()) {
            palavraPesquisada = txtNome.getText().trim();
        } else {
            palavraPesquisada = txtRG.getText().trim();
        }
        return palavraPesquisada;
    }

    private void editarRevendedor() {
        int linhaSelecionada = tblResultadoPesquisaRevendedor.getSelectedRow();
        if (linhaSelecionada != -1) {
            Revendedor revendedorSelecionado = listaRevendedores.get(linhaSelecionada);

            if (this.editarRevendedorForm != null) {
                this.editarRevendedorForm.dispose();
            }
            this.editarRevendedorForm = new CadastroRevendedoresForm(this, revendedorSelecionado);
            this.editarRevendedorForm.setVisible(true);
            PesquisaRevendedoresForm.this.dispose();

        } else {
            String mensagem = "Nenhum revendedor selecionado.";
            JOptionPane.showMessageDialog(this, mensagem, "Edição de Revendedor", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void excluirRevendedor() {
        try {
            int linhaSelecionada = tblResultadoPesquisaRevendedor.getSelectedRow();
            if (linhaSelecionada != -1) {
                Revendedor revendedorSelecionado = listaRevendedores.get(linhaSelecionada);

                int resposta;
                String mensagem = "Deseja excluir o revendedor: "
                        + revendedorSelecionado.getNomeRevendor();
                String titulo = "Exclusão de Revendedor";
                resposta = JOptionPane.showConfirmDialog(this,
                        mensagem, titulo, JOptionPane.YES_NO_OPTION);

                if (resposta == JOptionPane.YES_OPTION) {
                  RevendedorBO revendedorBO = new RevendedorBO();
                   revendedorBO.excluir(revendedorSelecionado.getIdRevendedor());

                    String mensagemSuceso = "Revenedor: "
                            + revendedorSelecionado.getNomeRevendor() + ", "
                            + "excluído com sucesso.";
                    JOptionPane.showMessageDialog(this,
                            mensagemSuceso, titulo,
                            JOptionPane.INFORMATION_MESSAGE);

                    this.carregarTabelaRevendedor();
                }
            } else {
                String mensagem = "Nenhum revendedor selecionado.";
                JOptionPane.showMessageDialog(this,
                        mensagem,
                        "Exclusão de revendedor",
                        JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            String mensagem = "Erro inesperado! Informe a mensagem de erro ao administrador do sistema.";
            mensagem += "\nMensagem de erro:\n" + e.getMessage();
            JOptionPane.showMessageDialog(this, mensagem, "Exclusão de revendedor", JOptionPane.ERROR_MESSAGE);
            this.dispose();
        }

    }

    private void exibirTelaCadastroRevendedor() {
        if (this.novoRevendedorForm == null) {
            this.novoRevendedorForm = new CadastroRevendedoresForm();
        }
        novoRevendedorForm.setVisible(true);
        novoRevendedorForm.toFront();
        this.dispose();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PesquisaRevendedoresForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PesquisaRevendedoresForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PesquisaRevendedoresForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PesquisaRevendedoresForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PesquisaRevendedoresForm().setVisible(true);
            }
        });
    }

     private class ModeloTabelaRevendedor extends AbstractTableModel {

        public String getColumnName(int coluna) {
            if (coluna == 0) {
                return "NOME";
            } else if (coluna == 1) {
                return "CPF/CNPJ";
            } else if (coluna == 2) {
                return "RG";
            } else if (coluna == 3) {
                return "DATA DE NASCIMENTO";
            }else if( coluna == 4){
                return "TELEFONE";
            } else{
                return "ENDEREÇO";
            }
        }

        @Override
        public int getRowCount() {
            return listaRevendedores.size();
        }

        @Override
        public int getColumnCount() {
            return 5;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            Revendedor revendedor = listaRevendedores.get(rowIndex);
            if (columnIndex == 0) {
                return revendedor.getNomeRevendor();
            } else if (columnIndex == 1) {
                if(revendedor.getCPF() == null){
                     return revendedor.getCNPJ();
                } else{
                    return revendedor.getCPF();
                }
            } else if (columnIndex == 2) {
                return revendedor.getRG();
            } else if (columnIndex == 3) {
                return  formatoData.format(revendedor.getDataNascimento());
            }else if (columnIndex == 4){
                return revendedor.getTelefone();
            }else{
                return revendedor.getEndereco();
            }
        }
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnGerarRelatorio;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel jpPesquisaRevendedor;
    private javax.swing.JPanel jpResultadoPesquisaRevendedor;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblPesquisa;
    private javax.swing.JRadioButton rdoNome;
    private javax.swing.JRadioButton rdoRG;
    private javax.swing.JTable tblResultadoPesquisaRevendedor;
    private javax.swing.JTextField txtNome;
    private javax.swing.JFormattedTextField txtRG;
    // End of variables declaration//GEN-END:variables
}
